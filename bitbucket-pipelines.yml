definitions:
  services:
    docker: # Define a custom docker daemon - can only be used with a self-hosted runner
      image: docker:dind

pipelines:
    custom: 
        build_ci_images:
            - variables:
                - name: CI_APPLICATION
                  description: "Select CI application to build"
                  default: "docker"
                  allowed-values:
                    - "docker"
                    - "ansible" 
                    - "deploy"
                    - "all"
                - name: BUILD_ID_OVERRIDE
                  description: "Override version (optional, leave empty for git-based)"
                  default: ""
            - step:
                name: "Build CI Images"
                image: atlassian/default-image:4
                services:
                    - docker
                runs-on:
                    - ans.production
                    - self.hosted
                script:
                    - export DOCKER_BUILDKIT=1
                    - export DOCKER_CLI_EXPERIMENTAL=enabled
                    - mv builds/.env.ci builds/.env
                    - chmod +x builds/*.sh
                    
                    # Set environment variables
                    - export BUILD_ID_OVERRIDE="${BUILD_ID_OVERRIDE}"
                    - export ENABLE_NEW_TAGGING=false  # CI images use old naming
                    
                    # Install buildx for docker builds
                    - |
                      if [ "$CI_APPLICATION" = "docker" ] || [ "$CI_APPLICATION" = "all" ]; then
                          export BUILDX_VERSION=0.18.0
                          curl -fsSLO https://github.com/docker/buildx/releases/download/v${BUILDX_VERSION}/buildx-v${BUILDX_VERSION}.linux-amd64
                          mkdir -p $HOME/.docker/cli-plugins/ && mv buildx-v${BUILDX_VERSION}.linux-amd64 $HOME/.docker/cli-plugins/docker-buildx && chmod +x ~/.docker/cli-plugins/docker-buildx
                          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes; docker buildx create --use
                          docker version
                      fi
                    
                    # Build based on selection
                    - |
                      case "$CI_APPLICATION" in
                        "docker")
                          echo "Building Docker CI image..."
                          bash builds/run.sh --application=docker
                          ;;
                        "ansible")
                          echo "Building Ansible CI image..."
                          bash builds/run.sh --application=ansible
                          ;;
                        "deploy")
                          echo "Building Deploy CI image..."
                          bash builds/run.sh --application=deploy
                          ;;
                        "all")
                          echo "Building all CI images..."
                          bash builds/run.sh --application=docker
                          bash builds/run.sh --application=ansible
                          bash builds/run.sh --application=deploy
                          ;;
                      esac

            - stage:
               name: "Build & Publish PHP 7.2 Images"
               steps:
                - step: 
                    name: "Apache"
                    image: dvmgremp/ci-builder:docker-bookworm
                    services:
                        - docker
                    runs-on:
                        - ans.production
                        - self.hosted
                    script:
                        - mv builds/.env.ci builds/.env
                        - chmod +x builds/*.sh
                        - bash builds/run.sh --application=php --module=apache --version=7.2
                - step: 
                    name: "Build"
                    image: dvmgremp/ci-builder:docker-bookworm
                    services:
                        - docker
                    runs-on:
                        - ans.production
                        - self.hosted
                    script:
                        - mv builds/.env.ci builds/.env
                        - chmod +x builds/*.sh
                        - bash builds/run.sh --application=php --module=build --version=7.2
            - stage:
               name: "Build & Publish PHP 7.4 Images"
               steps:
                - step: 
                    name: "Apache"
                    image: dvmgremp/ci-builder:docker-bookworm
                    services:
                        - docker
                    runs-on:
                        - ans.production
                        - self.hosted
                    script:
                        - mv builds/.env.ci builds/.env
                        - chmod +x builds/*.sh
                        - bash builds/run.sh --application=php --module=apache --version=7.4
                - step: 
                    name: "Build"
                    image: dvmgremp/ci-builder:docker-bookworm
                    services:
                        - docker
                    runs-on:
                        - ans.production
                        - self.hosted
                    script:
                        - mv builds/.env.ci builds/.env
                        - chmod +x builds/*.sh
                        - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes; docker buildx create --use # setup the QEMU emulation environment
                        - bash builds/run.sh --application=php --module=build --version=7.4
            - stage:
               name: "Build & Publish PHP 8.3 Images"
               steps:
                - step: 
                    name: "Apache"
                    image: dvmgremp/ci-builder:docker-bookworm
                    services:
                        - docker
                    runs-on:
                        - ans.production
                        - self.hosted
                    script:
                        - mv builds/.env.ci builds/.env
                        - chmod +x builds/*.sh
                        - bash builds/run.sh --application=php --module=apache --version=8.3
                - step: 
                    name: "Build"
                    image: dvmgremp/ci-builder:docker-bookworm
                    services:
                        - docker
                    runs-on:
                        - ans.production
                        - self.hosted
                    script:
                        - mv builds/.env.ci builds/.env
                        - chmod +x builds/*.sh
                        - bash builds/run.sh --application=php --module=build --version=8.3
        deploy_php:
            - variables:
                - name: PHP_VERSION
                  description: "Select PHP version to build"
                  default: "7.2"
                  allowed-values:
                    - "7.2"
                    - "7.4" 
                    - "8.3"
                    - "all"
                - name: MODULE
                  description: "Select image type to build"
                  default: "apache"
                  allowed-values:
                    - "apache"
                    - "build"
                    - "both"
                - name: BUILD_ID_OVERRIDE
                  description: "Override version (optional, leave empty for git-based)"
                  default: ""
                - name: ENABLE_NEW_TAGGING
                  description: "Enable new tagging system"
                  default: "true"
                  allowed-values:
                    - "true"
                    - "false"
            - step:
                name: "Build PHP Images"
                image: dvmgremp/ci-builder:docker-bookworm
                services:
                    - docker
                runs-on:
                    - ans.production
                    - self.hosted
                script:
                    - mv builds/.env.ci builds/.env
                    - chmod +x builds/*.sh
                    
                    # Set environment variables from pipeline variables
                    - export BUILD_ID_OVERRIDE="${BUILD_ID_OVERRIDE}"
                    - export ENABLE_NEW_TAGGING="${ENABLE_NEW_TAGGING}"
                    
                    # Build logic based on selections
                    - |
                      if [ "$MODULE" = "apache" ] || [ "$MODULE" = "both" ]; then
                          if [ "$PHP_VERSION" = "all" ]; then
                              bash builds/run.sh --application=php --module=apache
                          else
                              bash builds/run.sh --application=php --module=apache --version=${PHP_VERSION}
                          fi
                      fi
                    - |
                      if [ "$MODULE" = "build" ] || [ "$MODULE" = "both" ]; then
                          if [ "$PHP_VERSION" = "all" ]; then
                              bash builds/run.sh --application=php --module=build
                          else
                              bash builds/run.sh --application=php --module=build --version=${PHP_VERSION}
                          fi
                      fi